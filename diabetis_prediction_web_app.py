# -*- coding: utf-8 -*-
"""Diabetis Prediction Web App.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13v9qwpFgCvQxNPuLcThL-DfzyW4E8hPd
"""

import numpy as np
import pickle
import streamlit as st

# loading the saved model

with open('trained_model.sav', 'rb') as f:
    loaded_model = pickle.load(f)

# Define a function to make predictions


def predict_diabetes(input_data):
    # changing the input_data to numpy array
    input_data_as_numpy_array = np.asarray(input_data)

    # reshape the array as we are predicting for one instance
    input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

    prediction = loaded_model.predict(input_data_reshaped)
    print(prediction)

    if (prediction[0] == 0):
        return 'The person is not diabetic'
    else:
        return 'The person is diabetic'

# Define a function for the Streamlit app
def main():
     # Set the title of the app
    st.title('Diabetes Prediction Web App')
    st.subheader('Developed by Yoma!ðŸ˜Š')
    st.subheader('Enter the following details to predict diabetes')

    # Get user input
    pregnancies = st.text_input('Number of Pregnancies')
    glucose = st.text_input('Glucose Level')
    blood_pressure = st.text_input('Blood Pressure Value')
    skin_thickness = st.text_input('Skin Thickness Value')
    insulin = st.text_input('Insulin Level')
    bmi = st.text_input('BMI Value')
    diabetes_pedigree_function = st.text_input('Diabetes Pedigree Function Value')
    age = st.text_input('Age of the Person')

    # Code for prediction results
    result = ''
    # Create a button for prediction
    if st.button('Diabetes Test Result'):
        result = predict_diabetes([pregnancies, glucose, blood_pressure, skin_thickness, insulin, bmi, diabetes_pedigree_function, age])
        st.success(result)
if __name__ == '__main__':
    main()
    # Run the app using the command: streamlit run app.py
    # Make sure to replace 'app.py' with the name of your script file.
